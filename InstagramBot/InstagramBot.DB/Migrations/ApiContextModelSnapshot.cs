// <auto-generated />
using System;
using InstagramBot.DB;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace InstagramBot.DB.Migrations
{
    [DbContext(typeof(ApiContext))]
    partial class ApiContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("dbo")
                .HasAnnotation("ProductVersion", "2.2.4-servicing-10062")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("InstagramBot.DB.Entities.AppUser", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Created");

                    b.Property<string>("Login");

                    b.Property<DateTime>("Modified");

                    b.Property<string>("Password");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            Created = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Login = "Admin",
                            Modified = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Password = "123456"
                        });
                });

            modelBuilder.Entity("InstagramBot.DB.Entities.InstagramUser", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("AppUserId");

                    b.Property<string>("ChallengeRequiredCode");

                    b.Property<DateTime>("Created");

                    b.Property<string>("Login");

                    b.Property<int>("LoginStatus");

                    b.Property<DateTime>("Modified");

                    b.Property<string>("Name");

                    b.Property<string>("Password");

                    b.Property<string>("Session");

                    b.HasKey("Id");

                    b.HasIndex("AppUserId");

                    b.ToTable("InstagramUsers");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            AppUserId = 1L,
                            Created = new DateTime(2019, 6, 12, 8, 10, 20, 73, DateTimeKind.Utc).AddTicks(2996),
                            Login = "1Travel_Around_The_World",
                            LoginStatus = 1,
                            Modified = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Password = "Gfhjkm63934710",
                            Session = "{\"DeviceInfo\":{\"PhoneGuid\":\"f73aad24-90be-49dd-babf-44faf9dacb9c\",\"DeviceGuid\":\"3a4fd2e7-a923-46f7-8466-6c9fb668e49d\",\"GoogleAdId\":\"7f611346-d7e8-4900-bb7a-3770d9ded7ae\",\"RankToken\":\"6050750a-3518-4957-88c6-c17b354b3f0e\",\"AdId\":\"af1c925e-36e9-41ae-934a-883d49762a3c\",\"AndroidVer\":{\"Codename\":\"Oreo\",\"VersionNumber\":\"8.1\",\"APILevel\":\"27\"},\"AndroidBoardName\":\"universal5420\",\"AndroidBootloader\":\"T705XXU1BOL2\",\"DeviceBrand\":\"samsung\",\"DeviceId\":\"android-ba3e1170e2a805a5\",\"DeviceModel\":\"Samsung Galaxy Tab S 8.4 LTE\",\"DeviceModelBoot\":\"universal5420\",\"DeviceModelIdentifier\":\"LRX22G.T705XXU1BOL2\",\"FirmwareBrand\":\"Samsung Galaxy Tab S 8.4 LTE\",\"FirmwareFingerprint\":\"samsung/klimtltexx/klimtlte:5.0.2/LRX22G/T705XXU1BOL2:user/release-keys\",\"FirmwareTags\":\"release-keys\",\"FirmwareType\":\"user\",\"HardwareManufacturer\":\"samsung\",\"HardwareModel\":\"SM-T705\",\"Resolution\":\"1440x2560\",\"Dpi\":\"640dpi\"},\"UserSession\":{\"UserName\":\"1Travel_Around_The_World\",\"Password\":\"Gfhjkm63934710\",\"LoggedInUser\":{\"IsVerified\":false,\"IsPrivate\":false,\"Pk\":8600514033,\"ProfilePicture\":\"https://scontent-frx5-1.cdninstagram.com/vp/6af2e79b388e72c0eccd7f5a14b8f86e/5D8466F6/t51.2885-19/s150x150/41706647_304043560383657_6801298339208888320_n.jpg?_nc_ht=scontent-frx5-1.cdninstagram.com\",\"ProfilePicUrl\":\"https://scontent-frx5-1.cdninstagram.com/vp/6af2e79b388e72c0eccd7f5a14b8f86e/5D8466F6/t51.2885-19/s150x150/41706647_304043560383657_6801298339208888320_n.jpg?_nc_ht=scontent-frx5-1.cdninstagram.com\",\"ProfilePictureId\":\"1871058647741605596_8600514033\",\"UserName\":\"1travel_around_the_world\",\"FullName\":\"Travel Around The World\"},\"RankToken\":\"8600514033_f73aad24-90be-49dd-babf-44faf9dacb9c\",\"CsrfToken\":\"RXG7Rxcxbq1ON0gjx6hOQcUbdC9VHjuK\",\"FacebookUserId\":\"\",\"FacebookAccessToken\":\"\"},\"IsAuthenticated\":true,\"Cookies\":{\"Capacity\":300,\"Count\":9,\"MaxCookieSize\":4096,\"PerDomainCapacity\":20},\"RawCookies\":[{\"Comment\":\"\",\"CommentUri\":null,\"HttpOnly\":true,\"Discard\":false,\"Domain\":\".instagram.com\",\"Expired\":false,\"Expires\":\"0001-01-01T00:00:00\",\"Name\":\"rur\",\"Path\":\"/\",\"Port\":\"\",\"Secure\":true,\"TimeStamp\":\"2019-06-12T10:16:08.7478271+03:00\",\"Value\":\"FTW\",\"Version\":0},{\"Comment\":\"\",\"CommentUri\":null,\"HttpOnly\":false,\"Discard\":false,\"Domain\":\".instagram.com\",\"Expired\":false,\"Expires\":\"2029-06-09T10:14:07+03:00\",\"Name\":\"mid\",\"Path\":\"/\",\"Port\":\"\",\"Secure\":true,\"TimeStamp\":\"2019-06-12T10:15:51.6586832+03:00\",\"Value\":\"XQCmPwAEAAEqmPMpUrkTX3tMUwC1\",\"Version\":0},{\"Comment\":\"\",\"CommentUri\":null,\"HttpOnly\":false,\"Discard\":false,\"Domain\":\".instagram.com\",\"Expired\":false,\"Expires\":\"2020-06-10T10:16:07+03:00\",\"Name\":\"csrftoken\",\"Path\":\"/\",\"Port\":\"\",\"Secure\":true,\"TimeStamp\":\"2019-06-12T10:16:08.7478664+03:00\",\"Value\":\"9hFWuyKNi7yzhOcgCzEBde2PpZQ7r9Xd\",\"Version\":0},{\"Comment\":\"\",\"CommentUri\":null,\"HttpOnly\":true,\"Discard\":false,\"Domain\":\".instagram.com\",\"Expired\":false,\"Expires\":\"2019-09-10T10:16:02+03:00\",\"Name\":\"ds_user\",\"Path\":\"/\",\"Port\":\"\",\"Secure\":true,\"TimeStamp\":\"2019-06-12T10:16:04.2684317+03:00\",\"Value\":\"1travel_around_the_world\",\"Version\":0},{\"Comment\":\"\",\"CommentUri\":null,\"HttpOnly\":true,\"Discard\":false,\"Domain\":\".instagram.com\",\"Expired\":false,\"Expires\":\"2019-06-19T10:16:02+03:00\",\"Name\":\"shbid\",\"Path\":\"/\",\"Port\":\"\",\"Secure\":true,\"TimeStamp\":\"2019-06-12T10:16:04.2684707+03:00\",\"Value\":\"10514\",\"Version\":0},{\"Comment\":\"\",\"CommentUri\":null,\"HttpOnly\":true,\"Discard\":false,\"Domain\":\".instagram.com\",\"Expired\":false,\"Expires\":\"2019-06-19T10:16:02+03:00\",\"Name\":\"shbts\",\"Path\":\"/\",\"Port\":\"\",\"Secure\":true,\"TimeStamp\":\"2019-06-12T10:16:04.2684903+03:00\",\"Value\":\"1560323762.63188\",\"Version\":0},{\"Comment\":\"\",\"CommentUri\":null,\"HttpOnly\":false,\"Discard\":false,\"Domain\":\".instagram.com\",\"Expired\":false,\"Expires\":\"2019-09-10T10:16:07+03:00\",\"Name\":\"ds_user_id\",\"Path\":\"/\",\"Port\":\"\",\"Secure\":true,\"TimeStamp\":\"2019-06-12T10:16:08.747849+03:00\",\"Value\":\"8600514033\",\"Version\":0},{\"Comment\":\"\",\"CommentUri\":null,\"HttpOnly\":true,\"Discard\":false,\"Domain\":\".instagram.com\",\"Expired\":false,\"Expires\":\"0001-01-01T00:00:00\",\"Name\":\"urlgen\",\"Path\":\"/\",\"Port\":\"\",\"Secure\":true,\"TimeStamp\":\"2019-06-12T10:16:08.7478634+03:00\",\"Value\":\"\\\"{\\\\\\\"46.53.188.198\\\\\\\": 20852}:1haxUN:WiBK2pvOmxfe4rZmrk9qmBAyzII\\\"\",\"Version\":0},{\"Comment\":\"\",\"CommentUri\":null,\"HttpOnly\":true,\"Discard\":false,\"Domain\":\".instagram.com\",\"Expired\":false,\"Expires\":\"2020-06-11T10:16:02+03:00\",\"Name\":\"sessionid\",\"Path\":\"/\",\"Port\":\"\",\"Secure\":true,\"TimeStamp\":\"2019-06-12T10:16:04.2685122+03:00\",\"Value\":\"8600514033%3AxCRHFjDTuImaZP%3A22\",\"Version\":0}],\"InstaApiVersion\":6}"
                        });
                });

            modelBuilder.Entity("InstagramBot.DB.Entities.QueueHistory", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("CreatedById");

                    b.Property<DateTime>("CreatedOn");

                    b.Property<int>("NewQueueStatus");

                    b.Property<int>("OldQueueStatus");

                    b.Property<long>("QueueItemId");

                    b.HasKey("Id");

                    b.HasIndex("CreatedById");

                    b.HasIndex("QueueItemId");

                    b.ToTable("QueueHistories");
                });

            modelBuilder.Entity("InstagramBot.DB.Entities.QueueItem", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Created");

                    b.Property<int>("DelayInSeconds");

                    b.Property<long>("InstagramUserId");

                    b.Property<DateTime>("Modified");

                    b.Property<string>("Parameters");

                    b.Property<int>("QueueStatus");

                    b.Property<int>("QueueType");

                    b.HasKey("Id");

                    b.HasIndex("InstagramUserId");

                    b.ToTable("QueueItems");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            Created = new DateTime(2019, 6, 12, 8, 10, 20, 73, DateTimeKind.Utc).AddTicks(8259),
                            DelayInSeconds = 100,
                            InstagramUserId = 1L,
                            Modified = new DateTime(2019, 6, 12, 8, 8, 40, 73, DateTimeKind.Utc).AddTicks(8270),
                            Parameters = "{\"Tag\":\"Travel\"}",
                            QueueStatus = 1,
                            QueueType = 0
                        });
                });

            modelBuilder.Entity("InstagramBot.DB.Entities.Role", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Created");

                    b.Property<DateTime>("Modified");

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("InstagramBot.DB.Entities.User2Roles", b =>
                {
                    b.Property<long>("RoleId");

                    b.Property<long>("UserId");

                    b.HasKey("RoleId", "UserId");

                    b.HasIndex("UserId");

                    b.ToTable("User2Roles");
                });

            modelBuilder.Entity("InstagramBot.DB.Entities.InstagramUser", b =>
                {
                    b.HasOne("InstagramBot.DB.Entities.AppUser", "AppUser")
                        .WithMany("InstagramUsers")
                        .HasForeignKey("AppUserId")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("InstagramBot.DB.Entities.QueueHistory", b =>
                {
                    b.HasOne("InstagramBot.DB.Entities.AppUser", "CreatedBy")
                        .WithMany()
                        .HasForeignKey("CreatedById")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("InstagramBot.DB.Entities.QueueItem", "QueueItem")
                        .WithMany()
                        .HasForeignKey("QueueItemId")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("InstagramBot.DB.Entities.QueueItem", b =>
                {
                    b.HasOne("InstagramBot.DB.Entities.InstagramUser", "InstagramUser")
                        .WithMany("QueueItems")
                        .HasForeignKey("InstagramUserId")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("InstagramBot.DB.Entities.User2Roles", b =>
                {
                    b.HasOne("InstagramBot.DB.Entities.Role", "Role")
                        .WithMany("User2Roles")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("InstagramBot.DB.Entities.AppUser", "User")
                        .WithMany("User2Roles")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict);
                });
#pragma warning restore 612, 618
        }
    }
}
